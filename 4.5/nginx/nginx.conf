worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # ============================================================================
    # TLS/SSL Configuration
    # ============================================================================
    ssl_protocols TLSv1.3; # Only allow TLS 1.3
    ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Replace with your actual certificate paths
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # ============================================================================
    # Security Headers
    # ============================================================================
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=()" always;

    # Content Security Policy (CSP) - Strict security for privacy-focused marketplace
    # IMPORTANT: Adjust based on your frontend requirements
    add_header Content-Security-Policy "default-src 'none'; \
        script-src 'self' 'unsafe-inline'; \
        style-src 'self' 'unsafe-inline'; \
        img-src 'self' data: blob:; \
        font-src 'self' data:; \
        connect-src 'self' ws: wss:; \
        form-action 'self'; \
        frame-ancestors 'none'; \
        base-uri 'self'; \
        object-src 'none'; \
        upgrade-insecure-requests" always;

    # ============================================================================
    # Rate Limiting
    # ============================================================================
    # General rate limiting (10 requests per second)
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    # Authentication endpoints rate limiting (5 requests per minute)
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;

    # ============================================================================
    # Upstream Configuration (for the application server)
    # ============================================================================
    upstream marketplace_backend {
        # Keepalive connections to backend
        keepalive 32;
        # Default to blue for now, will be managed by blue-green deployment scripts
        server server:8080;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name your_domain.com;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name your_domain.com;

        # SSL certificates are defined globally in http block

        # Apply general rate limiting
        limit_req zone=general burst=20 nodelay;

        location / {
            proxy_pass http://marketplace_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            # Apply auth rate limiting to specific paths if needed
            # if ($request_uri ~* "^/(api/login|api/register)") {
            #     limit_req zone=auth burst=5 nodelay;
            # }
        }

        # WebSocket proxying
        location /ws {
            proxy_pass http://marketplace_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}

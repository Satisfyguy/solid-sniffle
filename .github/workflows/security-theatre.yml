name: Security Theatre Check
on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  security-theatre:
    name: Security Theatre Detection
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        override: true
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Install PowerShell Core
      run: |
        # PowerShell Core is already available on windows-latest
        pwsh --version
        
    - name: Check Security Theatre
      run: |
        pwsh -ExecutionPolicy Bypass -File "scripts/check-security-theatre-simple.ps1"
        
    - name: Cargo Check
      run: cargo check --workspace
      
    - name: Cargo Format Check
      run: cargo fmt --all -- --check
      
    - name: Cargo Clippy
      run: cargo clippy --workspace -- -D warnings
      
    - name: Cargo Test
      run: cargo test --workspace
      
    - name: Update Metrics
      run: |
        pwsh -ExecutionPolicy Bypass -File "scripts/update-metrics.ps1"
        
    - name: Upload Security Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: security-theatre-report
        path: |
          docs/metrics/
          .security-theatre-ignore
        retention-days: 30

  monero-integration:
    name: Monero Integration Tests
    runs-on: windows-latest
    needs: security-theatre
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Setup Monero Testnet
      run: |
        pwsh -ExecutionPolicy Bypass -File "scripts/setup-monero-testnet.ps1"
        
    - name: Run Integration Tests
      run: |
        cargo test --package wallet --test integration
        
    - name: Test RPC Connection
      run: |
        pwsh -ExecutionPolicy Bypass -File "scripts/test-rpc.ps1"

  tor-integration:
    name: Tor Integration Tests
    runs-on: windows-latest
    needs: security-theatre
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Install Tor
      run: |
        # Download and install Tor for Windows
        Invoke-WebRequest -Uri "https://www.torproject.org/dist/tor/tor-0.4.8.10-win64.zip" -OutFile "tor.zip"
        Expand-Archive -Path "tor.zip" -DestinationPath "tor"
        Add-Content -Path "tor/torrc" -Value "SocksPort 9050"
        
    - name: Start Tor
      run: |
        Start-Process -FilePath "tor/tor.exe" -ArgumentList "-f", "tor/torrc" -WindowStyle Hidden
        Start-Sleep -Seconds 10
        
    - name: Test Tor Connection
      run: |
        pwsh -ExecutionPolicy Bypass -File "scripts/check-tor-connection.ps1"
        
    - name: Run Tor Reality Checks
      run: |
        pwsh -ExecutionPolicy Bypass -File "scripts/validate-reality-check-tor.ps1" prepare_multisig
